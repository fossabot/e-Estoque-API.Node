import { MigrationInterface, QueryRunner } from "typeorm";

export class BaseCURD1750032730343 implements MigrationInterface {
    name = 'BaseCURD1750032730343'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "category" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "description" varchar(5000) NOT NULL, "shortDescription" varchar(500) NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "tax" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "description" varchar(5000) NOT NULL, "percentage" decimal(10,2) NOT NULL, "idCategory" varchar NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "address" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "street" varchar NOT NULL, "number" varchar NOT NULL, "complement" varchar(250) NOT NULL, "neighborhood" varchar(250) NOT NULL, "district" varchar(250) NOT NULL, "city" varchar(250) NOT NULL, "county" varchar(250) NOT NULL, "zipCode" varchar(250) NOT NULL, "latitude" varchar(250) NOT NULL, "longitude" varchar(250) NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "companyAddress" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "street" varchar NOT NULL, "number" varchar NOT NULL, "complement" varchar(250) NOT NULL, "neighborhood" varchar(250) NOT NULL, "district" varchar(250) NOT NULL, "city" varchar(250) NOT NULL, "county" varchar(250) NOT NULL, "zipCode" varchar(250) NOT NULL, "latitude" varchar(250) NOT NULL, "longitude" varchar(250) NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "company" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "docId" varchar(18) NOT NULL, "email" varchar(250) NOT NULL, "description" varchar(5000) NOT NULL, "phoneNumber" varchar(40) NOT NULL, "shortDescription" varchar(500) NOT NULL, "idCompanyAddress" varchar NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "product" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "description" varchar(5000) NOT NULL, "shortDescription" varchar(500) NOT NULL, "price" decimal(10,2) NOT NULL, "weight" decimal(10,3) NOT NULL, "height" decimal(10,2) NOT NULL, "length" decimal(10,2) NOT NULL, "image" varchar(500) NOT NULL, "idCategory" varchar NOT NULL, "idCompany" varchar NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "CustomerAddress" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "street" varchar NOT NULL, "number" varchar NOT NULL, "complement" varchar(250) NOT NULL, "neighborhood" varchar(250) NOT NULL, "district" varchar(250) NOT NULL, "city" varchar(250) NOT NULL, "county" varchar(250) NOT NULL, "zipCode" varchar(250) NOT NULL, "latitude" varchar(250) NOT NULL, "longitude" varchar(250) NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "customer" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "docId" varchar(18) NOT NULL, "email" varchar(250) NOT NULL, "description" varchar(5000) NOT NULL, "phoneNumber" varchar(40) NOT NULL, "shortDescription" varchar(500) NOT NULL, "idCustomerAddress" varchar NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "sales" ("id" varchar PRIMARY KEY NOT NULL, "quantity" integer NOT NULL, "totalPrice" decimal(10,2) NOT NULL, "totalTax" decimal(10,2) NOT NULL, "saleType" varchar(50) NOT NULL, "paymentType" varchar(50) NOT NULL, "deliveryDate" datetime, "saleDate" datetime NOT NULL, "paymentDate" datetime, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "deletedAt" datetime, "idCustomer" varchar NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "sale_products" ("id" varchar PRIMARY KEY NOT NULL, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "deletedAt" datetime, "idProduct" varchar NOT NULL, "idSale" varchar NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "inventory" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "quantity" integer NOT NULL, "dateOrder" datetime NOT NULL, "idProduct" varchar NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "temporary_tax" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "description" varchar(5000) NOT NULL, "percentage" decimal(10,2) NOT NULL, "idCategory" varchar NOT NULL, CONSTRAINT "FK_4a987a64f1f9ea72a7cbcf70f13" FOREIGN KEY ("idCategory") REFERENCES "category" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_tax"("id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "description", "percentage", "idCategory") SELECT "id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "description", "percentage", "idCategory" FROM "tax"`);
        await queryRunner.query(`DROP TABLE "tax"`);
        await queryRunner.query(`ALTER TABLE "temporary_tax" RENAME TO "tax"`);
        await queryRunner.query(`CREATE TABLE "temporary_company" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "docId" varchar(18) NOT NULL, "email" varchar(250) NOT NULL, "description" varchar(5000) NOT NULL, "phoneNumber" varchar(40) NOT NULL, "shortDescription" varchar(500) NOT NULL, "idCompanyAddress" varchar NOT NULL, CONSTRAINT "FK_d4d7af85f1cb171b4dbd3ddbca7" FOREIGN KEY ("idCompanyAddress") REFERENCES "companyAddress" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_company"("id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "docId", "email", "description", "phoneNumber", "shortDescription", "idCompanyAddress") SELECT "id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "docId", "email", "description", "phoneNumber", "shortDescription", "idCompanyAddress" FROM "company"`);
        await queryRunner.query(`DROP TABLE "company"`);
        await queryRunner.query(`ALTER TABLE "temporary_company" RENAME TO "company"`);
        await queryRunner.query(`CREATE TABLE "temporary_product" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "description" varchar(5000) NOT NULL, "shortDescription" varchar(500) NOT NULL, "price" decimal(10,2) NOT NULL, "weight" decimal(10,3) NOT NULL, "height" decimal(10,2) NOT NULL, "length" decimal(10,2) NOT NULL, "image" varchar(500) NOT NULL, "idCategory" varchar NOT NULL, "idCompany" varchar NOT NULL, CONSTRAINT "FK_56525928d543a4df0fab84247e1" FOREIGN KEY ("idCategory") REFERENCES "category" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_1aead0a4d92f8aca85b1677efd1" FOREIGN KEY ("idCompany") REFERENCES "company" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_product"("id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "description", "shortDescription", "price", "weight", "height", "length", "image", "idCategory", "idCompany") SELECT "id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "description", "shortDescription", "price", "weight", "height", "length", "image", "idCategory", "idCompany" FROM "product"`);
        await queryRunner.query(`DROP TABLE "product"`);
        await queryRunner.query(`ALTER TABLE "temporary_product" RENAME TO "product"`);
        await queryRunner.query(`CREATE TABLE "temporary_customer" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "docId" varchar(18) NOT NULL, "email" varchar(250) NOT NULL, "description" varchar(5000) NOT NULL, "phoneNumber" varchar(40) NOT NULL, "shortDescription" varchar(500) NOT NULL, "idCustomerAddress" varchar NOT NULL, CONSTRAINT "FK_5cf764d10204ec872f0516f0673" FOREIGN KEY ("idCustomerAddress") REFERENCES "CustomerAddress" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_customer"("id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "docId", "email", "description", "phoneNumber", "shortDescription", "idCustomerAddress") SELECT "id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "docId", "email", "description", "phoneNumber", "shortDescription", "idCustomerAddress" FROM "customer"`);
        await queryRunner.query(`DROP TABLE "customer"`);
        await queryRunner.query(`ALTER TABLE "temporary_customer" RENAME TO "customer"`);
        await queryRunner.query(`CREATE TABLE "temporary_sales" ("id" varchar PRIMARY KEY NOT NULL, "quantity" integer NOT NULL, "totalPrice" decimal(10,2) NOT NULL, "totalTax" decimal(10,2) NOT NULL, "saleType" varchar(50) NOT NULL, "paymentType" varchar(50) NOT NULL, "deliveryDate" datetime, "saleDate" datetime NOT NULL, "paymentDate" datetime, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "deletedAt" datetime, "idCustomer" varchar NOT NULL, CONSTRAINT "FK_cba324ed5eb7ffb188652397e7f" FOREIGN KEY ("idCustomer") REFERENCES "customer" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_sales"("id", "quantity", "totalPrice", "totalTax", "saleType", "paymentType", "deliveryDate", "saleDate", "paymentDate", "createdAt", "updatedAt", "deletedAt", "idCustomer") SELECT "id", "quantity", "totalPrice", "totalTax", "saleType", "paymentType", "deliveryDate", "saleDate", "paymentDate", "createdAt", "updatedAt", "deletedAt", "idCustomer" FROM "sales"`);
        await queryRunner.query(`DROP TABLE "sales"`);
        await queryRunner.query(`ALTER TABLE "temporary_sales" RENAME TO "sales"`);
        await queryRunner.query(`CREATE TABLE "temporary_sale_products" ("id" varchar PRIMARY KEY NOT NULL, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "deletedAt" datetime, "idProduct" varchar NOT NULL, "idSale" varchar NOT NULL, CONSTRAINT "FK_25fb272f8c9c6177d191330d6bf" FOREIGN KEY ("idProduct") REFERENCES "product" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_95979c853538ff82606c14e2115" FOREIGN KEY ("idSale") REFERENCES "sales" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_sale_products"("id", "createdAt", "updatedAt", "deletedAt", "idProduct", "idSale") SELECT "id", "createdAt", "updatedAt", "deletedAt", "idProduct", "idSale" FROM "sale_products"`);
        await queryRunner.query(`DROP TABLE "sale_products"`);
        await queryRunner.query(`ALTER TABLE "temporary_sale_products" RENAME TO "sale_products"`);
        await queryRunner.query(`CREATE TABLE "temporary_inventory" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "quantity" integer NOT NULL, "dateOrder" datetime NOT NULL, "idProduct" varchar NOT NULL, CONSTRAINT "FK_ce3fc55dfcf88040f8c4add6450" FOREIGN KEY ("idProduct") REFERENCES "product" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_inventory"("id", "is_deleted", "created_at", "updated_at", "deleted_at", "quantity", "dateOrder", "idProduct") SELECT "id", "is_deleted", "created_at", "updated_at", "deleted_at", "quantity", "dateOrder", "idProduct" FROM "inventory"`);
        await queryRunner.query(`DROP TABLE "inventory"`);
        await queryRunner.query(`ALTER TABLE "temporary_inventory" RENAME TO "inventory"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "inventory" RENAME TO "temporary_inventory"`);
        await queryRunner.query(`CREATE TABLE "inventory" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "quantity" integer NOT NULL, "dateOrder" datetime NOT NULL, "idProduct" varchar NOT NULL)`);
        await queryRunner.query(`INSERT INTO "inventory"("id", "is_deleted", "created_at", "updated_at", "deleted_at", "quantity", "dateOrder", "idProduct") SELECT "id", "is_deleted", "created_at", "updated_at", "deleted_at", "quantity", "dateOrder", "idProduct" FROM "temporary_inventory"`);
        await queryRunner.query(`DROP TABLE "temporary_inventory"`);
        await queryRunner.query(`ALTER TABLE "sale_products" RENAME TO "temporary_sale_products"`);
        await queryRunner.query(`CREATE TABLE "sale_products" ("id" varchar PRIMARY KEY NOT NULL, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "deletedAt" datetime, "idProduct" varchar NOT NULL, "idSale" varchar NOT NULL)`);
        await queryRunner.query(`INSERT INTO "sale_products"("id", "createdAt", "updatedAt", "deletedAt", "idProduct", "idSale") SELECT "id", "createdAt", "updatedAt", "deletedAt", "idProduct", "idSale" FROM "temporary_sale_products"`);
        await queryRunner.query(`DROP TABLE "temporary_sale_products"`);
        await queryRunner.query(`ALTER TABLE "sales" RENAME TO "temporary_sales"`);
        await queryRunner.query(`CREATE TABLE "sales" ("id" varchar PRIMARY KEY NOT NULL, "quantity" integer NOT NULL, "totalPrice" decimal(10,2) NOT NULL, "totalTax" decimal(10,2) NOT NULL, "saleType" varchar(50) NOT NULL, "paymentType" varchar(50) NOT NULL, "deliveryDate" datetime, "saleDate" datetime NOT NULL, "paymentDate" datetime, "createdAt" datetime NOT NULL DEFAULT (datetime('now')), "updatedAt" datetime NOT NULL DEFAULT (datetime('now')), "deletedAt" datetime, "idCustomer" varchar NOT NULL)`);
        await queryRunner.query(`INSERT INTO "sales"("id", "quantity", "totalPrice", "totalTax", "saleType", "paymentType", "deliveryDate", "saleDate", "paymentDate", "createdAt", "updatedAt", "deletedAt", "idCustomer") SELECT "id", "quantity", "totalPrice", "totalTax", "saleType", "paymentType", "deliveryDate", "saleDate", "paymentDate", "createdAt", "updatedAt", "deletedAt", "idCustomer" FROM "temporary_sales"`);
        await queryRunner.query(`DROP TABLE "temporary_sales"`);
        await queryRunner.query(`ALTER TABLE "customer" RENAME TO "temporary_customer"`);
        await queryRunner.query(`CREATE TABLE "customer" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "docId" varchar(18) NOT NULL, "email" varchar(250) NOT NULL, "description" varchar(5000) NOT NULL, "phoneNumber" varchar(40) NOT NULL, "shortDescription" varchar(500) NOT NULL, "idCustomerAddress" varchar NOT NULL)`);
        await queryRunner.query(`INSERT INTO "customer"("id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "docId", "email", "description", "phoneNumber", "shortDescription", "idCustomerAddress") SELECT "id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "docId", "email", "description", "phoneNumber", "shortDescription", "idCustomerAddress" FROM "temporary_customer"`);
        await queryRunner.query(`DROP TABLE "temporary_customer"`);
        await queryRunner.query(`ALTER TABLE "product" RENAME TO "temporary_product"`);
        await queryRunner.query(`CREATE TABLE "product" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "description" varchar(5000) NOT NULL, "shortDescription" varchar(500) NOT NULL, "price" decimal(10,2) NOT NULL, "weight" decimal(10,3) NOT NULL, "height" decimal(10,2) NOT NULL, "length" decimal(10,2) NOT NULL, "image" varchar(500) NOT NULL, "idCategory" varchar NOT NULL, "idCompany" varchar NOT NULL)`);
        await queryRunner.query(`INSERT INTO "product"("id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "description", "shortDescription", "price", "weight", "height", "length", "image", "idCategory", "idCompany") SELECT "id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "description", "shortDescription", "price", "weight", "height", "length", "image", "idCategory", "idCompany" FROM "temporary_product"`);
        await queryRunner.query(`DROP TABLE "temporary_product"`);
        await queryRunner.query(`ALTER TABLE "company" RENAME TO "temporary_company"`);
        await queryRunner.query(`CREATE TABLE "company" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "docId" varchar(18) NOT NULL, "email" varchar(250) NOT NULL, "description" varchar(5000) NOT NULL, "phoneNumber" varchar(40) NOT NULL, "shortDescription" varchar(500) NOT NULL, "idCompanyAddress" varchar NOT NULL)`);
        await queryRunner.query(`INSERT INTO "company"("id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "docId", "email", "description", "phoneNumber", "shortDescription", "idCompanyAddress") SELECT "id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "docId", "email", "description", "phoneNumber", "shortDescription", "idCompanyAddress" FROM "temporary_company"`);
        await queryRunner.query(`DROP TABLE "temporary_company"`);
        await queryRunner.query(`ALTER TABLE "tax" RENAME TO "temporary_tax"`);
        await queryRunner.query(`CREATE TABLE "tax" ("id" varchar PRIMARY KEY NOT NULL, "is_deleted" integer NOT NULL DEFAULT (0), "created_at" datetime NOT NULL DEFAULT (datetime('now')), "updated_at" datetime NOT NULL DEFAULT (datetime('now')), "deleted_at" datetime, "name" varchar NOT NULL, "description" varchar(5000) NOT NULL, "percentage" decimal(10,2) NOT NULL, "idCategory" varchar NOT NULL)`);
        await queryRunner.query(`INSERT INTO "tax"("id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "description", "percentage", "idCategory") SELECT "id", "is_deleted", "created_at", "updated_at", "deleted_at", "name", "description", "percentage", "idCategory" FROM "temporary_tax"`);
        await queryRunner.query(`DROP TABLE "temporary_tax"`);
        await queryRunner.query(`DROP TABLE "inventory"`);
        await queryRunner.query(`DROP TABLE "sale_products"`);
        await queryRunner.query(`DROP TABLE "sales"`);
        await queryRunner.query(`DROP TABLE "customer"`);
        await queryRunner.query(`DROP TABLE "CustomerAddress"`);
        await queryRunner.query(`DROP TABLE "product"`);
        await queryRunner.query(`DROP TABLE "company"`);
        await queryRunner.query(`DROP TABLE "companyAddress"`);
        await queryRunner.query(`DROP TABLE "address"`);
        await queryRunner.query(`DROP TABLE "tax"`);
        await queryRunner.query(`DROP TABLE "category"`);
    }

}
